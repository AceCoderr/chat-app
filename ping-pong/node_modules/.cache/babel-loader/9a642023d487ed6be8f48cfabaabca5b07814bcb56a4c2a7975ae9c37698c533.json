{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useParams,useNavigate}from'react-router-dom';import'../Styles/Chat.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function Chat(_ref){let{roomData,username,setUsername}=_ref;const{roomId}=useParams();const navigate=useNavigate();const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[participants,setParticipants]=useState([]);const[connected,setConnected]=useState(false);const[showNamePrompt,setShowNamePrompt]=useState(!username);const[tempUsername,setTempUsername]=useState('');const[error,setError]=useState(null);const websocketURL=process.env.REACT_APP_WEBSOCKET_API_URL;const socketRef=useRef(null);const messagesEndRef=useRef(null);// Handle initial connection and cleanup\nuseEffect(()=>{if(username&&!connected){connectToRoom();}return()=>{disconnectFromRoom();};},[roomId,username]);// Auto-scroll to bottom when new messages arrive\nuseEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const connectToRoom=()=>{try{const encodedUsername=encodeURIComponent(username);const wsUrl=websocketURL+`/roomId=${roomId}?username=${encodedUsername}`;const socket=new WebSocket(wsUrl);socketRef.current=socket;socket.onopen=()=>{console.log('WebSocket connection established');setConnected(true);// Send join message with username\n// const joinMessage = {\n//   type: 'JOIN',\n//   username: username,\n//   timestamp: new Date().toISOString()\n// };\n// socket.send(JSON.stringify(joinMessage));\n// Add system message\nsetMessages(prev=>[...prev,{text:`You joined the chat as ${username}`,type:'system'}]);};socket.onmessage=event=>{console.log(event.data);const message=JSON.parse(event.data);if(message.type==='USER_LIST'){setParticipants(message.users);}else if(message.type==='USER_JOINED'){console.log(\"in here\");setParticipants(prev=>[...prev,message.username]);setMessages(prev=>[...prev,{text:`${message.username} joined the chat`,type:'system'}]);}else if(message.type==='USER_LEFT'){setParticipants(prev=>prev.filter(user=>user!==message.username));setMessages(prev=>[...prev,{text:`${message.username} left the chat`,type:'system'}]);}else{// Regular chat message\nsetMessages(prev=>[...prev,{text:message.text,type:message.username===username?'sent':'received',sender:message.username}]);}};// socket.onclose = () => {\n//   console.log('WebSocket connection closed');\n//   setConnected(false);\n//   setMessages(prev => [...prev, { text: 'Disconnected from chat server', type: 'system' }]);\n// };\nsocket.onerror=error=>{console.error('WebSocket error:',error);setError('Connection error. Please try again.');setConnected(false);};}catch(err){setError(`WebSocket connection error: ${err.message}`);}};const disconnectFromRoom=()=>{if(socketRef.current){socketRef.current.close();socketRef.current=null;}};const handleSetUsername=()=>{if(!tempUsername.trim())return;setUsername(tempUsername);setShowNamePrompt(false);};const sendMessage=e=>{e.preventDefault();if(!inputMessage.trim()||!connected||!socketRef.current)return;const messageObject={type:'MESSAGE',text:inputMessage,username:username,timestamp:new Date().toISOString()};socketRef.current.send(JSON.stringify(messageObject));setInputMessage('');};const leaveRoom=()=>{disconnectFromRoom();navigate('/');};if(showNamePrompt){return/*#__PURE__*/_jsx(\"div\",{className:\"name-prompt-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"name-prompt-modal\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Join \",(roomData===null||roomData===void 0?void 0:roomData.name)||'Chat Room']}),/*#__PURE__*/_jsx(\"p\",{children:\"Please enter your name to join the chat\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:tempUsername,onChange:e=>setTempUsername(e.target.value),placeholder:\"Your name\",autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSetUsername,disabled:!tempUsername.trim(),children:\"Join Chat\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:(roomData===null||roomData===void 0?void 0:roomData.name)||'Chat Room'}),/*#__PURE__*/_jsxs(\"span\",{className:\"participant-count\",children:[participants.length,\" participant\",participants.length!==1?'s':'']})]}),/*#__PURE__*/_jsx(\"button\",{onClick:leaveRoom,className:\"leave-button\",children:\"Leave Room\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Participants\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"participants-list\",children:participants.map((user,index)=>/*#__PURE__*/_jsxs(\"li\",{className:user===username?'current-user':'',children:[user,\" \",user===username&&'(you)']},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.type}`,children:[msg.type==='received'&&/*#__PURE__*/_jsx(\"span\",{className:\"sender\",children:msg.sender}),/*#__PURE__*/_jsx(\"div\",{className:\"message-bubble\",children:msg.text}),msg.type==='sent'&&/*#__PURE__*/_jsx(\"span\",{className:\"sender\",children:\"You\"})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,className:\"message-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"Type a message...\",disabled:!connected,className:\"message-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!connected||!inputMessage.trim(),className:\"send-button\",children:\"Send\"})]})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]});}export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","jsxs","_jsxs","jsx","_jsx","Chat","_ref","roomData","username","setUsername","roomId","navigate","messages","setMessages","inputMessage","setInputMessage","participants","setParticipants","connected","setConnected","showNamePrompt","setShowNamePrompt","tempUsername","setTempUsername","error","setError","websocketURL","process","env","REACT_APP_WEBSOCKET_API_URL","socketRef","messagesEndRef","connectToRoom","disconnectFromRoom","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","encodedUsername","encodeURIComponent","wsUrl","socket","WebSocket","onopen","console","log","prev","text","type","onmessage","event","data","message","JSON","parse","users","filter","user","sender","onerror","err","close","handleSetUsername","trim","sendMessage","e","preventDefault","messageObject","timestamp","Date","toISOString","send","stringify","leaveRoom","className","children","name","value","onChange","target","placeholder","autoFocus","onClick","disabled","length","map","index","msg","ref","onSubmit"],"sources":["A:/Akka/chat-app/ping-pong/src/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../Styles/Chat.css';\r\n\r\nfunction Chat({ roomData, username, setUsername }) {\r\n  const { roomId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [participants, setParticipants] = useState([]);\r\n  const [connected, setConnected] = useState(false);\r\n  const [showNamePrompt, setShowNamePrompt] = useState(!username);\r\n  const [tempUsername, setTempUsername] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const websocketURL = process.env.REACT_APP_WEBSOCKET_API_URL\r\n  const socketRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Handle initial connection and cleanup\r\n  useEffect(() => {\r\n    if (username && !connected) {\r\n      connectToRoom();\r\n    }\r\n\r\n    return () => {\r\n      disconnectFromRoom();\r\n    };\r\n  }, [roomId, username]);\r\n\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const connectToRoom = () => {\r\n    try {\r\n      const encodedUsername = encodeURIComponent(username);\r\n\r\n      const wsUrl = websocketURL + `/roomId=${roomId}?username=${encodedUsername}`;\r\n      const socket = new WebSocket(wsUrl);\r\n      socketRef.current = socket;\r\n\r\n\r\n      socket.onopen = () => {\r\n        console.log('WebSocket connection established');\r\n        setConnected(true);\r\n        \r\n        // Send join message with username\r\n        // const joinMessage = {\r\n        //   type: 'JOIN',\r\n        //   username: username,\r\n        //   timestamp: new Date().toISOString()\r\n        // };\r\n        // socket.send(JSON.stringify(joinMessage));\r\n        \r\n        // Add system message\r\n        setMessages(prev => [...prev, { \r\n          text: `You joined the chat as ${username}`, \r\n          type: 'system' \r\n        }]);\r\n      };\r\n\r\n      socket.onmessage = (event) => {\r\n        console.log(event.data)\r\n        const message = JSON.parse(event.data);\r\n        \r\n        if (message.type === 'USER_LIST') {\r\n          setParticipants(message.users);\r\n        } else if (message.type === 'USER_JOINED') {\r\n          console.log(\"in here\")\r\n          setParticipants(prev => [...prev, message.username]);\r\n          setMessages(prev => [...prev, { \r\n            text: `${message.username} joined the chat`, \r\n            type: 'system' \r\n          }]);\r\n        } else if (message.type === 'USER_LEFT') {\r\n          setParticipants(prev => prev.filter(user => user !== message.username));\r\n          setMessages(prev => [...prev, { \r\n            text: `${message.username} left the chat`, \r\n            type: 'system' \r\n          }]);\r\n        } else {\r\n          // Regular chat message\r\n          setMessages(prev => [...prev, { \r\n            text: message.text, \r\n            type: message.username === username ? 'sent' : 'received', \r\n            sender: message.username \r\n          }]);\r\n        }\r\n      };\r\n\r\n      // socket.onclose = () => {\r\n      //   console.log('WebSocket connection closed');\r\n      //   setConnected(false);\r\n      //   setMessages(prev => [...prev, { text: 'Disconnected from chat server', type: 'system' }]);\r\n      // };\r\n\r\n      socket.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setError('Connection error. Please try again.');\r\n        setConnected(false);\r\n      };\r\n    } catch (err) {\r\n      setError(`WebSocket connection error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const disconnectFromRoom = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.close();\r\n      socketRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleSetUsername = () => {\r\n    if (!tempUsername.trim()) return;\r\n    \r\n    setUsername(tempUsername);\r\n    setShowNamePrompt(false);\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim() || !connected || !socketRef.current) return;\r\n\r\n    const messageObject = {\r\n      type: 'MESSAGE',\r\n      text: inputMessage,\r\n      username: username,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    socketRef.current.send(JSON.stringify(messageObject));\r\n    setInputMessage('');\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    disconnectFromRoom();\r\n    navigate('/');\r\n  };\r\n\r\n  if (showNamePrompt) {\r\n    return (\r\n      <div className=\"name-prompt-overlay\">\r\n        <div className=\"name-prompt-modal\">\r\n          <h2>Join {roomData?.name || 'Chat Room'}</h2>\r\n          <p>Please enter your name to join the chat</p>\r\n          <input\r\n            type=\"text\"\r\n            value={tempUsername}\r\n            onChange={(e) => setTempUsername(e.target.value)}\r\n            placeholder=\"Your name\"\r\n            autoFocus\r\n          />\r\n          <button \r\n            onClick={handleSetUsername}\r\n            disabled={!tempUsername.trim()}\r\n          >\r\n            Join Chat\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"room-info\">\r\n          <h2>{roomData?.name || 'Chat Room'}</h2>\r\n          <span className=\"participant-count\">\r\n            {participants.length} participant{participants.length !== 1 ? 's' : ''}\r\n          </span>\r\n        </div>\r\n        <button onClick={leaveRoom} className=\"leave-button\">\r\n          Leave Room\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"chat-container\">\r\n        <div className=\"sidebar\">\r\n          <h3>Participants</h3>\r\n          <ul className=\"participants-list\">\r\n            {participants.map((user, index) => (\r\n              <li key={index} className={user === username ? 'current-user' : ''}>\r\n                {user} {user === username && '(you)'}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"chat-main\">\r\n          <div className=\"messages-container\">\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`message ${msg.type}`}>\r\n                {msg.type === 'received' && <span className=\"sender\">{msg.sender}</span>}\r\n                <div className=\"message-bubble\">{msg.text}</div>\r\n                {msg.type === 'sent' && <span className=\"sender\">You</span>}\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <form onSubmit={sendMessage} className=\"message-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              disabled={!connected}\r\n              className=\"message-input\"\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              disabled={!connected || !inputMessage.trim()}\r\n              className=\"send-button\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}